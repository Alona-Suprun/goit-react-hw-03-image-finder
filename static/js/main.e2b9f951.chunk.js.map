{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","api/imageApi.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","ImageGalleryItem","onImageClick","e","props","modalContent","target","dataset","url","alt","openModal","this","image","map","tags","id","webformatURL","largeImageURL","className","s","src","ImageGalleryItemImage","onClick","Component","Button","children","allyProps","button","defaultProps","imageApi","searchQuery","page","fetch","then","response","json","hits","incrementPage","newQuery","ImageGallery","state","error","status","loading","scrollTo","document","documentElement","scrollHeight","fetchImagesApi","setState","prevState","window","top","behavior","finally","prevProps","prevSearch","searchValue","nextSearch","query","length","toast","catch","heading","style","textAlign","type","imageGallery","marginTop","marginBottom","Searchbar","onChange","currentTarget","value","toLowerCase","onSubmit","preventDefault","trim","searchbar","searchForm","searchFormInput","autoComplete","autoFocus","placeholder","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","addEventListener","removeEventListener","createPortal","Overlay","App","showModal","modalUrl","modalAlt","toggleModal","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2b9f951.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__1qwMf\",\"searchForm\":\"Searchbar_searchForm__3lNcM\",\"searchFormInput\":\"Searchbar_searchFormInput__10PTv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3c7G0\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2K_kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2kW0a\",\"Modal\":\"Modal_Modal__3xQs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2v62q\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  onImageClick = e => {\r\n    this.props.modalContent(e.target.dataset.url, e.target.alt);\r\n    this.props.openModal();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.image.map(({ tags, id, webformatURL, largeImageURL }) => {\r\n          return (\r\n            <li key={id} className={s.ImageGalleryItem}>\r\n              <img\r\n                src={webformatURL}\r\n                alt={tags}\r\n                className={s.ImageGalleryItemImage}\r\n                data-url={largeImageURL}\r\n                onClick={this.onImageClick}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  openModal: PropTypes.func,\r\n  modalContent: PropTypes.func,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n  <button className={s.button} onClick={onClick} {...allyProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\n\r\nimport ImageApi from '../../api/imageApi';\r\n\r\nconst imageApi = new ImageApi();\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    image: null,\r\n    error: null,\r\n    status: 'idle',\r\n    loading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevSearch = prevProps.searchValue;\r\n    const nextSearch = this.props.searchValue;\r\n\r\n    if (prevSearch !== nextSearch) {\r\n      this.setState({ status: 'pending', loading: true });\r\n\r\n      imageApi.query = this.props.searchValue;\r\n      imageApi\r\n        .fetchImagesApi(nextSearch)\r\n        .then(image => {\r\n          if (image.length === 0) {\r\n            toast(`Sorry, there is no image of ${this.props.searchValue}!`);\r\n\r\n            this.setState({ image, status: 'rejected' });\r\n            return;\r\n          } else this.setState({ image, status: 'resolved' });\r\n        })\r\n        .catch(error => {\r\n          this.setState({ error, status: 'rejected' });\r\n        });\r\n    }\r\n  }\r\n\r\n  onClick = () => {\r\n    const scrollTo = document.documentElement.scrollHeight - 141;\r\n    imageApi\r\n      .fetchImagesApi()\r\n      .then(image => {\r\n        this.setState(prevState => ({\r\n          loading: !prevState.loading,\r\n          image: [...prevState.image, ...image],\r\n        }));\r\n        window.scrollTo({\r\n          top: scrollTo,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .finally(\r\n        this.setState(prevState => ({\r\n          loading: !prevState.loading,\r\n        })),\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { image, status, loading } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return (\r\n        <h2 className={s.heading}>\r\n          Type what kind of image you're looking for in the search bar.\r\n        </h2>\r\n      );\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return (\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Loader type=\"Bars\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <h2 className={s.heading}>Try again.</h2>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className={s.imageGallery}>\r\n            <ImageGalleryItem\r\n              image={image}\r\n              openModal={this.props.openModal}\r\n              modalContent={this.props.modalContent}\r\n            />\r\n          </ul>\r\n          {loading ? (\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                marginTop: '20px',\r\n                marginBottom: '20px',\r\n              }}\r\n            >\r\n              <Button type=\"button\" onClick={this.onClick}>\r\n                Load more\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <Loader type=\"Bars\" />\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onClick: PropTypes.func,\r\n  searchValue: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func,\r\n  modalContent: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","const API_KEY = '22049228-dddf73462342363350e266d0d';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport default class imageApi {\r\n  constructor() {\r\n    this.searchQuery = '';\r\n    this.page = 1;\r\n  }\r\n\r\n  fetchImagesApi() {\r\n    return fetch(\r\n      `${BASE_URL}?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=12&key=${API_KEY}`,\r\n    )\r\n      .then(response => response.json())\r\n      .then(({ hits }) => {\r\n        this.incrementPage();\r\n\r\n        return hits;\r\n      });\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './Searchbar.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchValue: '',\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ searchValue: e.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.searchValue.trim() === '') {\r\n      toast('Please type something to find image you want');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.searchValue);\r\n    this.setState({ searchValue: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.searchbar}>\r\n        <form className={s.searchForm} onSubmit={this.onSubmit}>\r\n          <input\r\n            className={s.searchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchValue}\r\n            onChange={this.onChange}\r\n          />\r\n          <Button type=\"submit\">Search</Button>\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    searchValue: '',\n    showModal: false,\n    modalUrl: '',\n    modalAlt: '',\n  };\n\n  onSubmit = searchValue => {\n    this.setState({ searchValue });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  modalContent = (url, alt) => {\n    this.setState({ modalUrl: url, modalAlt: alt });\n  };\n\n  render() {\n    const { showModal } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n\n        <ImageGallery\n          searchValue={this.state.searchValue}\n          openModal={this.toggleModal}\n          modalContent={this.modalContent}\n        />\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} modalContent={this.modalContent}>\n            <img src={this.state.modalUrl} alt={this.state.modalAlt} />\n          </Modal>\n        )}\n\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3mSp_\",\"heading\":\"ImageGallery_heading__3cYV7\"};"],"sourceRoot":""}